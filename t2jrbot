#!/usr/bin/env python
# -*- coding: utf-8 -*-

# t2jrbot - simple but elegant IRC bot
# Copyright © 2014 Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse
import hashlib

import t2jrbot

def command_admins(bot, nick, host, channel, command, argstr):
    admins = ["%s!%s" % (nick, host) for nick, host in bot.admins]
    bot.send_ircmsg_privmsg(channel, "%s: %s" % (nick, ", ".join(admins)))

def command_help(bot, nick, host, channel, command, argstr):
    bot.send_ircmsg_privmsg(channel, "%s: List of commands:" % nick)
    for cmd, descr in bot.command_descriptions.items():
        bot.send_ircmsg_privmsg(channel, "%s: %s - %s" % (nick, cmd, descr))

def command_quit(bot, nick, host, channel, command, argstr):
    bot.quit(argstr)

def command_say(bot, nick, host, channel, command, argstr):
    bot.send_ircmsg_privmsg(channel, argstr)
    bot.send_ircmsg_privmsg(channel, "-- %s" % nick)

def parse_admin_arg(admin):
    admin_nick, sep, admin_host = admin.partition("!")
    admin_nick = admin_nick.strip()
    admin_host = admin_host.strip()
    if not admin_nick or not sep or not admin_host:
        raise argparse.ArgumentTypeError("malformed admin identifier, should "
                                         "be of form 'nick!user@example.org'")
    return admin_nick, admin_host

def parse_args():
    parser = argparse.ArgumentParser(description="Simple but elegant IRC bot")
    parser.add_argument("-p", "--port", type=int, default=6667,
                        help="port of the server which bot connects to, default=6667")
    parser.add_argument("server", metavar="SERVER",
                        help="address of the server which bot connects to")
    parser.add_argument("channel", metavar="CHANNEL",
                        help="channel which bot joins after a connection is established")
    parser.add_argument("-n", "--nick", default=None,
                        help="nickname of the bot")
    parser.add_argument("-a", "--admin", action="append", dest="admins",
                        type=parse_admin_arg, metavar="ADMIN",
                        help="admin of the bot (e.g. 'nick!user@example.org'), "
                        "can be given multiple times to add multiple admins")
    return parser.parse_args()

def main():
    options = parse_args()

    if options.nick is None:
        md5 = hashlib.md5()
        md5.update(options.server)
        md5.update(options.channel)
        options.nick = "t2jrbot_%s" % md5.hexdigest()

    bot = t2jrbot.Bot(options.server, options.port, options.nick, options.channel)

    bot.register_command("!admins", command_admins, "list admins", require_admin=False)
    bot.register_command("!help", command_help, "show help", require_admin=False)
    bot.register_command("!quit", command_quit, "quit")
    bot.register_command("!say", command_say, "say something to the channel")

    for admin_nick, admin_host in options.admins:
        bot.add_admin(admin_nick, admin_host)

    bot.run()

if __name__ == "__main__":
    main()
